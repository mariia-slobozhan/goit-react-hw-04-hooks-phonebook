{"version":3,"sources":["Components/PhonebookForm/PhonebookForm.js","Components/ContactItem/ContactItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js","Components/PhonebookForm/PhonebookForm.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css"],"names":["PhonebookForm","addNewContact","useState","name","setName","number","setNumber","handleChange","e","target","value","resetForm","onSubmit","preventDefault","className","s","label","input","type","pattern","title","required","onChange","button","ContactItem","tel","id","onDeleteContact","item","onClick","ContactList","items","map","uuidv4","Filter","contactsList","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocaleStorage","contacts","setContacts","filter","setFilter","list","contact","normalizedContact","toLowerCase","some","el","alert","prevState","normalizedContacts","includes","getVisiableContacts","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d46f3c85.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./PhonebookForm.module.css\";\n\nexport default function PhonebookForm({ addNewContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addNewContact({ name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nPhonebookForm.propTypes = {\n  addNewContact: PropTypes.func,\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactItem.module.css\";\r\n\r\nexport default function ContactItem({ name, tel, id, onDeleteContact }) {\r\n  return (\r\n    <li className={s.item} id={id}>\r\n      <span className={s.name}>{name}</span>\r\n      <span className={s.tel}>{tel}</span>\r\n      <button\r\n        className={s.button}\r\n        onClick={() => onDeleteContact(id)}\r\n        type=\"button\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  tel: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList({ items, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {items.map((item) => (\r\n        <ContactItem\r\n          key={uuidv4()}\r\n          id={item.id}\r\n          name={item.name}\r\n          tel={item.number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PhonebookForm from \"./Components/PhonebookForm/PhonebookForm\";\nimport ContactList from \"./Components/ContactsList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nconst contactsList = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst useLocaleStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default function App() {\n  const [contacts, setContacts] = useLocaleStorage(\"contacts\", contactsList);\n  const [filter, setFilter] = useState(\"\");\n\n  const addNewContact = (contact) => {\n    const normalizedContact = contact.name.toLowerCase();\n    if (contacts.some((el) => el.name.toLowerCase() === normalizedContact)) {\n      alert(`${contact.name} is already in contact list`);\n      return;\n    }\n    setContacts((prevState) => [...prevState, { ...contact, id: uuidv4() }]);\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const getVisiableContacts = () => {\n    const normalizedContacts = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedContacts)\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <PhonebookForm list={contacts} addNewContact={addNewContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        items={getVisiableContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"PhonebookForm_label__4cPF7\",\"input\":\"PhonebookForm_input__1hdNc\",\"button\":\"PhonebookForm_button__3fyT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__O0jVP\",\"name\":\"ContactItem_name__1TfYl\",\"tel\":\"ContactItem_tel__lEdyW\",\"button\":\"ContactItem_button__1oJNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__18k1A\",\"input\":\"Filter_input__92XOZ\"};"],"sourceRoot":""}